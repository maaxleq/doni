name: Build and Release

on:
  push:
    tags:
      - '*'  # Triggers on any tag push.

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    permissions: write-all
    
    steps:
      # 1. Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Set up Rust toolchain using actions-rs/toolchain
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # 3. Build the Rust application in release mode
      - name: Build Application
        run: |
          cargo build --release

      # 4. Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # 5. Upload the compiled binary as a release asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/doni
          asset_name: doni-linux
          asset_content_type: application/octet-stream
